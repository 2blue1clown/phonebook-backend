{"version":3,"sources":["components/People/people.jsx","components/PersonForm/PersonForm.jsx","components/SearchFilter/SearchFilter.jsx","services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["People","name","number","handleClick","onClick","PersonForm","submitCallback","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","value","onChange","type","SearchFilter","filter","handleFilterChange","baseUrl","axios","get","newObject","post","id","put","delete","App","props","useState","persons","setPersons","setNewName","setNewNumber","setFilter","errorMsg","setErrorMsg","useEffect","console","log","personsService","then","response","data","catch","error","filteredPersons","person","includes","event","target","preventDefault","updateExistingPerson","some","oldPerson","find","p","newPerson","window","confirm","map","concat","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48a442e8.chunk.js","sourcesContent":["\nexport default function People({name,number,handleClick}) {\n\n  return (\n    <div>\n        <p key={name}>{name} {number}</p>\n        <button onClick={handleClick}>Remove</button>\n    </div>\n  )\n}","\nexport default function PersonForm({submitCallback, handleNameChange, handleNumberChange, newName,newNumber }) {\n\n  return (\n    <div>\n      <form onSubmit={submitCallback}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}","\nexport default function SearchFilter({filter,handleFilterChange }) {\n  return (<div>\n    Search: <input value={filter} onChange={handleFilterChange} />\n  </div>)\n}\n","import axios from 'axios'\n//const baseUrl = \"http://localhost:3001/api/contacts\"\nconst baseUrl = '/api/contacts'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl,newObject)\n}\n\nconst update = (id,newObject) => {\n    return axios.put(`${baseUrl}/${id}`,newObject)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {getAll, create, update,remove}","\nimport React, { useState, useEffect } from 'react'\nimport People from './components/People/people'\nimport PersonForm from './components/PersonForm/PersonForm'\nimport SearchFilter from './components/SearchFilter/SearchFilter'\nimport personsService from './services/persons'\n\nconst App = (props) => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('name')\n    const [newNumber, setNewNumber] = useState('number')\n    const [filter, setFilter] = useState('')\n    const [errorMsg, setErrorMsg] = useState('')\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value)\n    }\n\n    //fetch the current data from the JSON server\n    useEffect(() => {\n        console.log('effect')\n        personsService\n            .getAll()\n            .then(response => {\n                console.log('promise fulfilled')\n                setPersons(response.data)\n            })\n            .catch(error => {\n                console.log(error.response.data)\n            })\n    }, [])\n\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        const updateExistingPerson = persons.some(person => person.name === newName)\n        const oldPerson = persons.find(p => p.name === newName)\n        const newPerson = { ...oldPerson, number: newNumber }\n\n        if (updateExistingPerson) {\n            window.confirm(`${newName} is already in the phonebook, replace the old number with a new one?`)\n\n            personsService\n                .update(oldPerson.id, newPerson)\n                .then(response => {\n                    console.log(response)\n                    setPersons(persons.map(person => (person.id !== oldPerson.id) ? person : response.data))\n                    setNewName('')\n                    setNewNumber('')\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n\n        }\n        else {\n            const newPerson = { name: newName, number: newNumber }\n            console.log('posting')\n            personsService\n                .create(newPerson) // This is a service method defined in services/persons.js\n                .then(response => {\n                    setPersons(persons.concat(response.data))\n                })\n                .catch(error => {\n                    console.log(error.response.data.error)\n                    setErrorMsg(error.response.data.error)\n                })\n            setNewName('')\n            setNewNumber('')\n        }\n\n    }\n\n \n    const filteredPersons = persons.filter(person => person.name.includes(filter))\n\n    const removePerson = (name) => {\n        return () => {\n            if (window.confirm(`Delete ${name} from the phonebook?`)) {\n                const person = persons.find(p => p.name === name)\n                console.log(`removing ${person.name}`)\n                personsService\n                    .remove(person.id)\n\n                    .then(response => {\n                        setPersons(persons.filter(p => p.id !== person.id))\n                    })\n                    .catch(error => {\n                        alert(\n                            `The person \"${person.name} was already deleted from the server`\n                        )\n                        setPersons(persons.filter(p => p.id !== person.id))\n                        console.log(error.response.data.error)\n                    })\n            }\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <p>{errorMsg}</p>\n            <h3>Search</h3>\n            <SearchFilter filter={filter} handleFilterChange={handleFilterChange} />\n            <h3>PersonForm</h3>\n            <PersonForm submitCallback={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n            <h2>Numbers</h2>\n            {filteredPersons.map(person => (\n                <People key={person.name} name={person.name} number={person.number} handleClick={removePerson(person.name)} />\n            )\n            )}\n        </div>\n    )\n}\n\nexport default App\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n    ReactDOM.render(\n      <App />,\n      document.getElementById('root')\n    )\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}