{"version":3,"sources":["components/People/people.jsx","components/PersonForm/PersonForm.jsx","components/SearchFilter/SearchFilter.jsx","services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["People","name","number","handleClick","onClick","PersonForm","submitCallback","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","value","onChange","type","SearchFilter","filter","handleFilterChange","baseUrl","axios","get","newObject","post","id","put","delete","App","props","useState","persons","setPersons","setNewName","setNewNumber","setFilter","useEffect","console","log","personsService","then","response","data","filteredPersons","person","includes","event","target","preventDefault","map","window","confirm","updatedPersons","index","findIndex","p","newPerson","concat","find","catch","error","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.caf02d14.chunk.js","sourcesContent":["\nexport default function People({name,number,handleClick}) {\n\n  return (\n    <div>\n        <p key={name}>{name} {number}</p>\n        <button onClick={handleClick}>Remove</button>\n    </div>\n  )\n}","\nexport default function PersonForm({submitCallback, handleNameChange, handleNumberChange, newName,newNumber }) {\n\n  return (\n    <div>\n      <form onSubmit={submitCallback}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}","\nexport default function SearchFilter({filter,handleFilterChange }) {\n  return (<div>\n    Search: <input value={filter} onChange={handleFilterChange} />\n  </div>)\n}\n","import axios from 'axios';\n//const baseUrl = \"http://localhost:3001/api/contacts\"\nconst baseUrl = \"/api/contacts\"\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl,newObject)\n}\n\nconst update = (id,newObject) => {\n  return axios.put(`${baseUrl}${id}`,newObject)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {getAll, create, update,remove}","import React, { useState, useEffect } from 'react'\nimport People from './components/People/people'\nimport PersonForm from './components/PersonForm/PersonForm'\nimport SearchFilter from './components/SearchFilter/SearchFilter'\nimport personsService from './services/persons'\n\nconst App = (props) => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('name')\n  const [newNumber, setNewNumber] = useState('number')\n  const [filter, setFilter] = useState('')\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  //fetch the current data from the JSON server\n  useEffect(() => {\n    console.log('effect')\n    personsService\n      .getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }, [])\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (!persons.map(person => person.name).includes(newName)) {\n      const newPerson = { name: newName, number: newNumber }\n      //setPersons([...persons, newPerson])\n      console.log('posting')\n      personsService\n        .create(newPerson) // This is a service method defined in services/persons.js\n        .then(response => {\n          setPersons(persons.concat(response.data))\n        })\n\n      setNewName('')\n      setNewNumber('')\n    }\n    else {\n      window.confirm(`${newName} is already in the phonebook, replace the old number with a new one?`)\n      const updatedPersons = [...persons]\n      const index = updatedPersons.findIndex(p => p.name === newName)\n      const id = updatedPersons[index].id\n      console.log(`updating ${id}`)\n      updatedPersons[index].number = newNumber\n      personsService\n        .update(id,updatedPersons[index])\n        .then(response => {\n          //console.log(response);\n          setPersons(updatedPersons)\n\n          setNewName('')\n          setNewNumber('')\n        })\n      \n    }\n  }\n\n  console.log({persons,filter})\n  const filteredPersons = persons.filter(person => person.name.includes(filter))\n\n  const removePerson = (name) => {\n    return () => {\n      if(window.confirm(`Delete ${name} from the phonebook?`)){\n      const person = persons.find(p => p.name === name)\n      console.log(`removing ${person.name}`)\n      personsService\n        .remove(person.id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n        .catch(error => {\n          alert(\n            `The person \"${person.name} was already deleted from the server`\n          )\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n    }}\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <h3>Search</h3>\n      <SearchFilter filter={filter} handleFilterChange={handleFilterChange} />\n      <h3>PersonForm</h3>\n      <PersonForm submitCallback={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      {filteredPersons.map(person => (\n        <People key={person.name} name={person.name} number={person.number} handleClick={removePerson(person.name)} />\n      )\n      )}\n    </div>\n  )\n}\n\nexport default App\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n    ReactDOM.render(\n      <App />,\n      document.getElementById('root')\n    )\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}